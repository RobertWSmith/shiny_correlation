library(shiny)
shinyServer(function(input, output) {
})
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Correlation"),
sidebarPanel(),
mainPanel()
))
runApp('.')
# use the mtcars dataset
mpgData <- mtcars
mpgData <- factor(mpgData$am, labels = c("Automatic", "Manual"))
mpgData <- mtcars
mpgData$am <- factor(mpgData$am, labels = c("Automatic", "Manual"))
View(mpgData)
source('C:/Users/Rob/R/shiny_correlation/server.R')
source('C:/Users/Rob/R/shiny_correlation/ui.R')
runApp('.')
library(shiny)
source('C:/Users/Rob/R/shiny_correlation/server.R')
source('C:/Users/Rob/R/shiny_correlation/ui.R')
runApp()
source('C:/Users/Rob/R/shiny_correlation/server.R')
source('C:/Users/Rob/R/shiny_correlation/ui.R')
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Correlation"),
sidebarPanel(
selectInput("cor_method", "Choose a Correlation Method:",
choices = c("Pearson", "Kendall", "Spearman")),
selectInput("Ha", "Alternative Hypothesis:",
choices = c("Two-Tailed", "Less Than", "Greater Than")),
sliderInput("conf_int", "Confidence Interval:",
min = 0, max = 1, value = 0.95, step = 0.01),
),
#     selectInput("predictor", "Predictor Variable:",
#                 choices = c())
mainPanel(tableOutput("table"))
))
source('C:/Users/Rob/R/shiny_correlation/ui.R')
runApp()
x <- airquality[, -1] # x is a regression design matrix
y <- airquality[,  1] # y is the corresponding response
stopifnot(complete.cases(y) != is.na(y))
ok <- complete.cases(x, y)
fix(ok)
sum(ok) / length(ok)
source('C:/Users/Rob/R/shiny_correlation/ui.R')
source('C:/Users/Rob/R/shiny_correlation/server.R')
runApp()
library(shiny)
library(datasets)
# use the mtcars dataset
mpgData <- mtcars
mpgData$am <- factor(mpgData$am, labels = c("Automatic", "Manual"))
center.and.scale <- function(inputDF) {
num.vec <- logical(length = ncol(inputDF))
for (i in 1:length(num.vec)) {
num.vec[i] <- is.numeric(inputDF[1,i])
}
tempDF <- inputDF[ ,num.vec]
inputMean <- colMeans(tempDF, na.rm=TRUE)
inputSD <- apply(tempDF, 2, sd, na.rm=TRUE)
for (i in 1:ncol(inputDF)) {
tempDF[,i] <- tempDF[,i] - inputMean[i] / inputSD[i]
}
count <- 0
for (i in 1:length(num.vec)) {
if (num.vec[i]) {
count <- count + 1
inputDF[,i] <- tempDF[,count]
}
return(inputDF)
}
center.and.scale(mtcars)
library(shiny)
library(datasets)
# use the mtcars dataset
mpgData <- mtcars
mpgData$am <- factor(mpgData$am, labels = c("Automatic", "Manual"))
mpgData$cyl <- factor(mpgData$cyl)
center.and.scale <- function(inputDF) {
num.vec <- logical(length = ncol(inputDF))
for (i in 1:length(num.vec)) {
num.vec[i] <- is.numeric(inputDF[1,i])
}
tempDF <- inputDF[ ,num.vec]
inputMean <- colMeans(tempDF, na.rm=TRUE)
inputSD <- apply(tempDF, 2, sd, na.rm=TRUE)
for (i in 1:ncol(inputDF)) {
tempDF[,i] <- tempDF[,i] - inputMean[i] / inputSD[i]
}
count <- 0
for (i in 1:length(num.vec)) {
if (num.vec[i]) {
count <- count + 1
inputDF[,i] <- tempDF[,count]
}
return(inputDF)
}
center.and.scale(mtcars)
source('C:/Users/Rob/R/shiny_correlation/server.R')
source('C:/Users/Rob/R/shiny_correlation/ui.R')
source('C:/Users/Rob/R/shiny_correlation/server.R')
source('C:/Users/Rob/R/shiny_correlation/ui.R')
runApp()
source('C:/Users/a421356/R-GitHub/shiny_correlation/server.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/ui.R')
library(shiny)
source('C:/Users/a421356/R-GitHub/shiny_correlation/server.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/ui.R')
runApp()
source('C:/Users/a421356/R-GitHub/shiny_correlation/functions.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/server.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/functions.R')
library(shiny)
source('C:/Users/a421356/R-GitHub/shiny_correlation/functions.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/server.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/ui.R')
runApp()
library(shiny)
source('C:/Users/a421356/R-GitHub/shiny_correlation/functions.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/server.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/ui.R')
runApp()
source('C:/Users/a421356/R-GitHub/shiny_correlation/ui.R')
library(shiny)
source('C:/Users/a421356/R-GitHub/shiny_correlation/functions.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/server.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/ui.R')
runApp()
library(shiny)
source('C:/Users/a421356/R-GitHub/shiny_correlation/functions.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/server.R')
source('C:/Users/a421356/R-GitHub/shiny_correlation/ui.R')
runApp()
